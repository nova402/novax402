name: Go CI

on:
  push:
    branches: [main, develop]
    paths:
      - 'go/**'
      - '.github/workflows/go.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'go/**'

jobs:
  test:
    name: Test Go Packages
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        go-version: ['1.21', '1.22', '1.23']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache-dependency-path: go/go.sum
      
      - name: Verify dependencies
        run: |
          cd go
          go mod verify
      
      - name: Format check
        run: |
          cd go
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "Code not formatted:"
            gofmt -s -l .
            exit 1
          fi
      
      - name: Vet
        run: |
          cd go
          go vet ./...
      
      - name: Build
        run: |
          cd go
          go build ./...
      
      - name: Test
        run: |
          cd go
          go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./go/coverage.txt
          flags: go
  
  lint:
    name: Lint Go Code
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: go

