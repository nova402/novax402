name: Rust CI

on:
  push:
    branches: [main, develop]
    paths:
      - 'rust/**'
      - '.github/workflows/rust.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'rust/**'

jobs:
  test:
    name: Test Rust Packages
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        rust-version: [stable, beta]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust ${{ matrix.rust-version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust-version }}
          override: true
          components: rustfmt, clippy
      
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: rust/target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Format check
        run: |
          cd rust/nova402-core
          cargo fmt -- --check
      
      - name: Clippy
        run: |
          cd rust/nova402-core
          cargo clippy -- -D warnings
      
      - name: Build
        run: |
          cd rust/nova402-core
          cargo build --release
      
      - name: Test
        run: |
          cd rust/nova402-core
          cargo test --all-features
      
      - name: Bench
        run: |
          cd rust/nova402-core
          cargo bench --no-run
  
  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      
      - name: Publish nova402-core
        run: |
          cd rust/nova402-core
          cargo publish --token ${{ secrets.CARGO_TOKEN }}

